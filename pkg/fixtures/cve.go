package fixtures

import (
	"github.com/gogo/protobuf/types"
	"github.com/stackrox/rox/generated/storage"
)

func GetEmbeddedImageCVE_2007_6755() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2007-6755",
		Cvss:         5.8,
		Summary:      "The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain \"skeleton key\" values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2007-6755",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V2,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1381532100},
		LastModified:      &types.Timestamp{Seconds: 1638298620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2009_4487() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:        "CVE-2009-4487",
		Cvss:       6.8,
		Summary:    "nginx 0.7.64 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.",
		Link:       "https://security-tracker.debian.org/tracker/CVE-2009-4487",
		SetFixedBy: &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1263414600},
		LastModified:      &types.Timestamp{Seconds: 1636559460},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2010_0928() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2010-0928",
		Cvss:         4.0,
		Summary:      "OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a \"fault-based attack.\"",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2010-0928",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V2,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:H/Au:N/C:C/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_HIGH,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 1.9,
			ImpactScore:         6.9,
			Score:               4.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1267817400},
		LastModified:      &types.Timestamp{Seconds: 1502933520},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2010_4756() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2010-4756",
		Cvss:         4.0,
		Summary:      "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2010-4756",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V2,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:S/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_SINGLE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.0,
			ImpactScore:         2.9,
			Score:               4.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1299096000},
		LastModified:      &types.Timestamp{Seconds: 1630498500},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2011_4116() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2011-4116",
		Cvss:         7.5,
		Summary:      "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2011-4116",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1580494500},
		LastModified:      &types.Timestamp{Seconds: 1580940600},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2013_0337() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:        "2013-0337",
		Cvss:       7.5,
		Summary:    "The default configuration of nginx, possibly 1.3.13 and earlier, uses world-readable permissions for the (1) access.log and (2) error.log files, which allows local users to obtain sensitive information by reading the files.",
		Link:       "https://security-tracker.debian.org/tracker/CVE-2013-0337",
		SetFixedBy: &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1382835300},
		LastModified:      &types.Timestamp{Seconds: 1636559820},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2015_8985() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2015-8985",
		Cvss:         5.9,
		Summary:      "The pop_fail_stack function in the GNU C Library (aka glibc or libc6) allows context-dependent attackers to cause a denial of service (assertion failure and application crash) via vectors related to extended regular expression processing.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2015-8985",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1490029140},
		LastModified:      &types.Timestamp{Seconds: 1585666020},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2015_9019() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2015-9019",
		Cvss:         5.3,
		Summary:      "In libxslt 1.1.29 and earlier, the EXSLT math.random function was not initialized with a random seed during startup, which could cause usage of this function to produce predictable outputs.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2015-9019",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_LOW,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.3,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1491429540},
		LastModified:      &types.Timestamp{Seconds: 1491940620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2017_7245() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2017-7245",
		Cvss:         7.5,
		Summary:      "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2017-7245",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1490306340},
		LastModified:      &types.Timestamp{Seconds: 1534501740},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2017_7246() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2017-7246",
		Cvss:         7.8,
		Summary:      "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2017-7246",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1490306340},
		LastModified:      &types.Timestamp{Seconds: 1534501740},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2017_11164() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2017-11164",
		Cvss:         7.5,
		Summary:      "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2017-11164",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.9,
			Score:               7.8,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1499743740},
		LastModified:      &types.Timestamp{Seconds: 1614273300},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2017_12132() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2017-12132",
		Cvss:         5.9,
		Summary:      "The DNS stub resolver in the GNU C Library (aka glibc or libc6) before version 2.26, when EDNS support is enabled, will solicit large UDP responses from name servers, potentially simplifying off-path DNS spoofing attacks due to IP fragmentation.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2017-12132",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:N/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1501604940},
		LastModified:      &types.Timestamp{Seconds: 1570060980},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2017_16231() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2017-16231",
		Cvss:         5.5,
		Summary:      "** DISPUTED ** In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2017-16231",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         2.9,
			Score:               2.1,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1553183940},
		LastModified:      &types.Timestamp{Seconds: 1554213300},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2018_6485() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-6485",
		Cvss:         9.8,
		Summary:      "An integer overflow in the implementation of the posix_memalign in memalign functions in the GNU C Library (aka glibc or libc6) 2.26 and earlier could cause these functions to return a pointer to a heap area that is too small, potentially leading to heap corruption.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2018-6485",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1517495340},
		LastModified:      &types.Timestamp{Seconds: 1598290620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2018_20796() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-20796",
		Cvss:         7.5,
		Summary:      "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2018-20796",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1551148140},
		LastModified:      &types.Timestamp{Seconds: 1572988500},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2018_25032() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-25032",
		Cvss:         7.5,
		Summary:      "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2018-25032",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1:1.2.8.dfsg-5+deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1648199700},
		LastModified:      &types.Timestamp{Seconds: 1653552900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2018_1000001() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-1000001",
		Cvss:         7.8,
		Summary:      "In glibc 2.26 and earlier there is confusion in the usage of getcwd() by realpath() which can be used to write before the destination buffer leading to a buffer underflow and potential code execution.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2018-1000001",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         10.0,
			Score:               7.2,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1517408940},
		LastModified:      &types.Timestamp{Seconds: 1570060980},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_1543() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-1543",
		Cvss:         7.4,
		Summary:      "ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-1543",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0k-1~deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1551907740},
		LastModified:      &types.Timestamp{Seconds: 1627719300},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_1547() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-1547",
		Cvss:         4.7,
		Summary:      "Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-1547",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 3.4,
			ImpactScore:         2.9,
			Score:               1.9,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 1.0,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               4.7,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1568135700},
		LastModified:      &types.Timestamp{Seconds: 1627719300},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_1551() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-1551",
		Cvss:         5.3,
		Summary:      "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-1551",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u5"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_LOW,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.3,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1575656100},
		LastModified:      &types.Timestamp{Seconds: 1650382560},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_1563() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-1563",
		Cvss:         3.7,
		Summary:      "In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-1563",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_LOW,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               3.7,
			Severity:            storage.CVSSV3_LOW,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1568135700},
		LastModified:      &types.Timestamp{Seconds: 1627719300},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_6488() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-6488",
		Cvss:         7.8,
		Summary:      "The string component in the GNU C Library (aka glibc or libc6) through 2.28, when running on the x32 architecture, incorrectly attempts to use a 64-bit register for size_t in assembly codes, which can lead to a segmentation fault or possibly unspecified other impact, as demonstrated by a crash in __memmove_avx_unaligned_erms in sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S during a memcpy.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-6488",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.4,
			Score:               4.6,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1547839740},
		LastModified:      &types.Timestamp{Seconds: 1592018100},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_9169() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-9169",
		Cvss:         9.8,
		Summary:      "In the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-9169",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1551148140},
		LastModified:      &types.Timestamp{Seconds: 1650413700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_11068() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-11068",
		Cvss:         9.8,
		Summary:      "libxslt through 1.1.33 allows bypass of a protection mechanism because callers of xsltCheckRead and xsltCheckWrite permit access even upon receiving a -1 error code. xsltCheckRead can return -1 for a crafted URL that is not actually invalid and is subsequently loaded.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-11068",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.29-2.1+deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1554928140},
		LastModified:      &types.Timestamp{Seconds: 1598290620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_13117() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-13117",
		Cvss:         7.5,
		Summary:      "In numbers.c in libxslt 1.1.33, an xsl:number with certain format strings could lead to a uninitialized read in xsltNumberFormatInsertNumbers. This could allow an attacker to discern whether a byte on the stack contains the characters A, a, I, i, or 0, or any other character.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-13117",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.29-2.1+deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1561947300},
		LastModified:      &types.Timestamp{Seconds: 1624979700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_13118() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-13118",
		Cvss:         7.5,
		Summary:      "In numbers.c in libxslt 1.1.33, a type holding grouping characters of an xsl:number instruction was too narrow and an invalid character/length combination could be passed to xsltNumberFormatDecimal, leading to a read of uninitialized stack data.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-13118",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.29-2.1+deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1561947300},
		LastModified:      &types.Timestamp{Seconds: 1624979700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_17543() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-17543",
		Cvss:         8.1,
		Summary:      "LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-17543",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               8.1,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1571019300},
		LastModified:      &types.Timestamp{Seconds: 1627042500},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_18197() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-18197",
		Cvss:         7.5,
		Summary:      "In xsltCopyText in transform.c in libxslt 1.1.33, a pointer variable isn't reset under certain circumstances. If the relevant memory area happened to be freed and reused in a certain way, a bounds check could fail and memory outside a buffer could be written to, or uninitialized data could be disclosed.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-18197",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.29-2.1+deb9u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:H/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_HIGH,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 4.9,
			ImpactScore:         6.4,
			Score:               5.1,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.6,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1571433300},
		LastModified:      &types.Timestamp{Seconds: 1598290620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2019_20838() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-20838",
		Cvss:         7.5,
		Summary:      "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2019-20838",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1592241300},
		LastModified:      &types.Timestamp{Seconds: 1632320520},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_1971() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-1971",
		Cvss:         5.9,
		Summary:      "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-1971",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1607444100},
		LastModified:      &types.Timestamp{Seconds: 1652366820},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_6096() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-6096",
		Cvss:         8.1,
		Summary:      "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-6096",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               8.1,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1585779300},
		LastModified:      &types.Timestamp{Seconds: 1652377200},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_10029() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-10029",
		Cvss:         5.5,
		Summary:      "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-10029",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         2.9,
			Score:               2.1,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1583334900},
		LastModified:      &types.Timestamp{Seconds: 1651065420},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_14155() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-14155",
		Cvss:         5.3,
		Summary:      "libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-14155",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
			ExploitabilityScore: 3.9,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_LOW,
			Score:               5.3,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1592241300},
		LastModified:      &types.Timestamp{Seconds: 1651158360},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_16156() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-16156",
		Cvss:         7.8,
		Summary:      "CPAN 2.28 allows Signature Verification Bypass.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-16156",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1639419300},
		LastModified:      &types.Timestamp{Seconds: 1648819560},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_27618() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-27618",
		Cvss:         5.5,
		Summary:      "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-27618",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         2.9,
			Score:               2.1,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1614381300},
		LastModified:      &types.Timestamp{Seconds: 1652366040},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_36309() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-36309",
		Cvss:         5.3,
		Summary:      "ngx_http_lua_module (aka lua-nginx-module) before 0.10.16 in OpenResty allows unsafe characters in an argument when using the API to mutate a URI, or a request or response header.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-36309",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_LOW,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.3,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1617736500},
		LastModified:      &types.Timestamp{Seconds: 1622747400},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3326() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3326",
		Cvss:         7.5,
		Summary:      "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3326",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1611778500},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3520() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "There's a flaw in lz4. An attacker who submits a crafted file to an application linked with lz4 may be able to trigger an integer overflow, leading to calling of memmove() on a negative size argument, causing an out-of-bounds write and/or a crash. The greatest impact of this flaw is to availability, with some potential impact to confidentiality and integrity as well.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3520",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "0.0~r131-2+deb9u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1622639700},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3618() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3618",
		Cvss:         7.4,
		Summary:      "ALPACA is an application layer protocol content confusion attack, exploiting TLS servers implementing different protocols but using compatible certificates, such as multi-domain or wildcard certificates. A MiTM attacker having access to victim's traffic at the TCP/IP layer can redirect traffic from one subdomain to another, resulting in a valid TLS session. This breaks the authentication of TLS and cross-protocol attacks may be possible where the behavior of one protocol service may compromise the other at the application layer.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3618",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1648066500},
		LastModified:      &types.Timestamp{Seconds: 1649105160},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3711() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3711",
		Cvss:         9.8,
		Summary:      "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3711",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u7"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1629818100},
		LastModified:      &types.Timestamp{Seconds: 1652205780},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3712() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3712",
		Cvss:         7.4,
		Summary:      "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3712",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u7"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1629818100},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_4160() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-4160",
		Cvss:         5.9,
		Summary:      "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-4160",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u8"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1643408100},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_23840() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-23840",
		Cvss:         7.5,
		Summary:      "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-23840",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u3"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1613495700},
		LastModified:      &types.Timestamp{Seconds: 1652366040},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_23841() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-23841",
		Cvss:         5.9,
		Summary:      "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-23841",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.0l-1~deb9u3"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1613495700},
		LastModified:      &types.Timestamp{Seconds: 1652366040},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_27645() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-27645",
		Cvss:         2.5,
		Summary:      "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-27645",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.4,
			ImpactScore:         2.9,
			Score:               1.9,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L",
			ExploitabilityScore: 1.0,
			ImpactScore:         1.4,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_LOW,
			Score:               2.5,
			Severity:            storage.CVSSV3_LOW,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1614179700},
		LastModified:      &types.Timestamp{Seconds: 1653344700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2022_0778() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-0778",
		Cvss:         7.5,
		Summary:      "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-0778",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u8"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1647364500},
		LastModified:      &types.Timestamp{Seconds: 1652771700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2022_1292() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_1752() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-1752",
		Cvss:         7.0,
		Summary:      "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-1752",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:H/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_HIGH,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 1.9,
			ImpactScore:         6.4,
			Score:               3.7,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.0,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.0,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1588266900},
		LastModified:      &types.Timestamp{Seconds: 1639585860},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

/*
func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_XXXX_XXXX() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}
*/
func GetEmbeddedNodeCVE_2018_16880() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-16880",
		Cvss:         7.0,
		Summary:      "A flaw was found in the Linux kernel's handle_rx() function in the [vhost_net] driver. A malicious virtual guest, under specific conditions, can trigger an out-of-bounds write in a kmalloc-8 slab on a virtual host which may lead to a kernel memory corruption and a system panic. Due to the nature of the flaw, privilege escalation cannot be fully ruled out. Versions from v4.16 and newer are vulnerable.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2018-16880",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.4,
			ImpactScore:         10.0,
			Score:               6.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.0,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.0,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1548779340},
		LastModified:      &types.Timestamp{Seconds: 1558020540},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2018_1000026() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-1000026",
		Cvss:         7.7,
		Summary:      "Linux Linux kernel version at least v4.8 onwards, probably well before contains a Insufficient input validation vulnerability in bnx2x network card driver that can result in DoS: Network card firmware assertion takes card off-line. This attack appear to be exploitable via An attacker on a must pass a very large, specially crafted packet to the bnx2x card. This can be done from an untrusted guest VM..",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2018-1000026",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:S/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_SINGLE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 8.0,
			ImpactScore:         6.9,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H",
			ExploitabilityScore: 3.1,
			ImpactScore:         4.0,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_CHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.7,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1518218940},
		LastModified:      &types.Timestamp{Seconds: 1602768480},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2019_3016() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-3016",
		Cvss:         4.7,
		Summary:      "In a Linux KVM guest that has PV TLB enabled, a process in the guest kernel may be able to read memory locations from another process in the same guest. This problem is limit to the host running linux kernel 4.10 with a guest running linux kernel 4.16 or later. The problem mainly affects AMD processors but Intel CPUs cannot be ruled out.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2019-3016",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 3.4,
			ImpactScore:         2.9,
			Score:               1.9,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 1.0,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               4.7,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1580501700},
		LastModified:      &types.Timestamp{Seconds: 1591820100},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2019_3819() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-3819",
		Cvss:         4.4,
		Summary:      "A flaw was found in the Linux kernel in the function hid_debug_events_read() in drivers/hid/hid-debug.c file which may enter an infinite loop with certain parameters passed from a userspace. A local privileged user (\"root\") can cause a system lock up and a denial of service. Versions from v4.18 and newer are vulnerable.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2019-3819",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.9,
			Score:               4.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 0.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_HIGH,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               4.4,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1548440940},
		LastModified:      &types.Timestamp{Seconds: 1603129380},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2020_16120() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-16120",
		Cvss:         4.4,
		Summary:      "Overlayfs did not properly perform permission checking when copying up files in an overlayfs and could be exploited from within a user namespace, if, for example, unprivileged user namespaces were allowed. It was possible to have a file not readable by an unprivileged user to be copied to a mountpoint controlled by the user, like a removable device. This was introduced in kernel version 4.19 by commit d1d04ef (\"ovl: stack file ops\"). This was fixed in kernel version 5.8 by commits 56230d9 (\"ovl: verify permissions in ovl_path_open()\"), 48bd024 (\"ovl: switch to mounter creds in readdir\") and 05acefb (\"ovl: check permission to open real file\"). Additionally, commits 130fdbc (\"ovl: pass correct flags for opening real directory\") and 292f902 (\"ovl: call secutiry hook in ovl_real_ioctl()\") in kernel 5.8 might also be desired or necessary. These additional commits introduced a regression in overlay mounts within user namespaces which prevented access to files with ownership outside of the user namespace. This regression was mitigated by subsequent commit b6650da (\"ovl: do not fail because of O_NOATIMEi\") in kernel 5.11.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2020-16120",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.11"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 3.9,
			ImpactScore:         2.9,
			Score:               2.1,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 0.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_HIGH,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               4.4,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1612988100},
		LastModified:      &types.Timestamp{Seconds: 1637260800},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2020_35508() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-35508",
		Cvss:         4.5,
		Summary:      "A flaw possibility of race condition and incorrect initialization of the process id was found in the Linux kernel child/parent process identification handling while filtering signal handlers. A local attacker is able to abuse this flaw to bypass checks to send any signal to a privileged process.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2020-35508",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.12"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.4,
			ImpactScore:         6.4,
			Score:               4.4,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
			ExploitabilityScore: 1.0,
			ImpactScore:         3.4,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_LOW,
			Integrity:           storage.CVSSV3_IMPACT_LOW,
			Availability:        storage.CVSSV3_IMPACT_LOW,
			Score:               4.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1616778900},
		LastModified:      &types.Timestamp{Seconds: 1639687320},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2021_3373() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:     "CVE-2021-3773",
		Summary: "A flaw in netfilter could allow a network-connected attacker to infer openvpn connection endpoint information for further use in traditional network attacks.",
		CvssV3: &storage.CVSSV3{
			Vector: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			Score:  9.8,
		},
	}
}

func GetEmbeddedNodeCVE_2021_20194() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-20194",
		Cvss:         7.8,
		Summary:      "There is a vulnerability in the linux kernel versions higher than 5.2 (if kernel compiled with config params CONFIG_BPF_SYSCALL=y , CONFIG_BPF=y , CONFIG_CGROUPS=y , CONFIG_CGROUP_BPF=y , CONFIG_HARDENED_USERCOPY not set, and BPF hook to getsockopt is registered). As result of BPF execution, the local user can trigger bug in __cgroup_bpf_run_filter_getsockopt() function that can lead to heap overflow (because of non-hardened usercopy). The impact of attack could be deny of service or possibly privileges escalation.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2021-20194",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.4,
			Score:               4.6,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1614122100},
		LastModified:      &types.Timestamp{Seconds: 1617193740},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2021_46283() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-46283",
		Cvss:         5.5,
		Summary:      "nf_tables_newset in net/netfilter/nf_tables_api.c in the Linux kernel before 5.12.13 allows local users to cause a denial of service (NULL pointer dereference and general protection fault) because of the missing initialization for nft_set_elem_expr_alloc. A local user can set a netfilter table expression in their own namespace.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2021-46283",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.12.13"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.9,
			Score:               4.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1641939300},
		LastModified:      &types.Timestamp{Seconds: 1642685400},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2022_0185() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-0185",
		Cvss:         8.4,
		Summary:      "A heap-based buffer overflow flaw was found in the way the legacy_parse_param function in the Filesystem Context functionality of the Linux kernel verified the supplied parameters length. An unprivileged (in case of unprivileged user namespaces enabled, otherwise needs namespaced CAP_SYS_ADMIN privilege) local user able to open a filesystem that does not support the Filesystem Context API (and thus fallbacks to legacy handling) could use this flaw to escalate their privileges on the system.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2022-0185",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         10.0,
			Score:               7.2,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 2.5,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               8.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1644603300},
		LastModified:      &types.Timestamp{Seconds: 1648570080},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2022_30594() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-30594",
		Cvss:         7.8,
		Summary:      "The Linux kernel before 5.17.2 mishandles seccomp permissions. The PTRACE_SEIZE code path allows attackers to bypass intended restrictions on setting the PT_SUSPEND_SECCOMP flag.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2022-30594",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.10.110"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.4,
			Score:               4.6,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1652332500},
		LastModified:      &types.Timestamp{Seconds: 1653067980},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}
