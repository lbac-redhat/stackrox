package fixtures

import (
	"github.com/gogo/protobuf/types"
	"github.com/stackrox/rox/generated/storage"
)

func GetEmbeddedImageCVE_2007_6755() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2007-6755",
		Cvss:         5.8,
		Summary:      "The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain \"skeleton key\" values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2007-6755",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V2,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1381532100},
		LastModified:      &types.Timestamp{Seconds: 1638298620},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2010_0928() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2010-0928",
		Cvss:         4.0,
		Summary:      "OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a \"fault-based attack.\"",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2010-0928",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V2,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:H/Au:N/C:C/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_HIGH,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 1.9,
			ImpactScore:         6.9,
			Score:               4.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1267817400},
		LastModified:      &types.Timestamp{Seconds: 1502933520},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2011_4116() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2011-4116",
		Cvss:         7.5,
		Summary:      "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2011-4116",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:P/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1580494500},
		LastModified:      &types.Timestamp{Seconds: 1580940600},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2018_25032() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-25032",
		Cvss:         7.5,
		Summary:      "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2018-25032",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1:1.2.11.dfsg-1+deb10u1"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1648199700},
		LastModified:      &types.Timestamp{Seconds: 1653552900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2020_16156() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-16156",
		Cvss:         7.8,
		Summary:      "CPAN 2.28 allows Signature Verification Bypass.",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2020-16156",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         6.4,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_REQUIRED,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1639419300},
		LastModified:      &types.Timestamp{Seconds: 1648819560},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3711() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3711",
		Cvss:         9.8,
		Summary:      "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3711",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u7"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         6.4,
			Score:               7.5,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_CRITICAL,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1629818100},
		LastModified:      &types.Timestamp{Seconds: 1652205780},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_LOW_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_3712() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-3712",
		Cvss:         7.4,
		Summary:      "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-3712",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u7"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 8.6,
			ImpactScore:         4.9,
			Score:               5.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1629818100},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2021_4160() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-4160",
		Cvss:         5.9,
		Summary:      "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2021-4160",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u8"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 8.6,
			ImpactScore:         2.9,
			Score:               4.3,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 2.2,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               5.9,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1643408100},
		LastModified:      &types.Timestamp{Seconds: 1650413760},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_MODERATE_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2022_0778() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-0778",
		Cvss:         7.5,
		Summary:      "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-0778",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1d-0+deb10u8"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:N/I:N/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 10.0,
			ImpactScore:         2.9,
			Score:               5.0,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 2.2,
			ImpactScore:         5.2,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.5,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1647364500},
		LastModified:      &types.Timestamp{Seconds: 1652771700},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_IMPORTANT_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedImageCVE_2022_1292() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-1292",
		Cvss:         9.8,
		Summary:      "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
		Link:         "https://security-tracker.debian.org/tracker/CVE-2022-1292",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "1.1.1n-0+deb10u2"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 10.0,
			ImpactScore:         10.0,
			Score:               10.0,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 3.9,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               9.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1651594500},
		LastModified:      &types.Timestamp{Seconds: 1652886900},
		VulnerabilityType: storage.EmbeddedVulnerability_IMAGE_VULNERABILITY,
		Severity:          storage.VulnerabilitySeverity_CRITICAL_VULNERABILITY_SEVERITY,
	}
}

func GetEmbeddedNodeCVE_2018_16880() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-16880",
		Cvss:         7.0,
		Summary:      "A flaw was found in the Linux kernel's handle_rx() function in the [vhost_net] driver. A malicious virtual guest, under specific conditions, can trigger an out-of-bounds write in a kmalloc-8 slab on a virtual host which may lead to a kernel memory corruption and a system panic. Due to the nature of the flaw, privilege escalation cannot be fully ruled out. Versions from v4.16 and newer are vulnerable.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2018-16880",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.4,
			ImpactScore:         10.0,
			Score:               6.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.0,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.0,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1548779340},
		LastModified:      &types.Timestamp{Seconds: 1558020540},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2018_1000026() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2018-1000026",
		Cvss:         7.7,
		Summary:      "Linux Linux kernel version at least v4.8 onwards, probably well before contains a Insufficient input validation vulnerability in bnx2x network card driver that can result in DoS: Network card firmware assertion takes card off-line. This attack appear to be exploitable via An attacker on a must pass a very large, specially crafted packet to the bnx2x card. This can be done from an untrusted guest VM..",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2018-1000026",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:N/AC:L/Au:S/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_NETWORK,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_SINGLE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 8.0,
			ImpactScore:         6.9,
			Score:               6.8,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H",
			ExploitabilityScore: 3.1,
			ImpactScore:         4.0,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			AttackVector:        storage.CVSSV3_ATTACK_NETWORK,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_CHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.7,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1518218940},
		LastModified:      &types.Timestamp{Seconds: 1602768480},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2019_3016() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-3016",
		Cvss:         4.7,
		Summary:      "In a Linux KVM guest that has PV TLB enabled, a process in the guest kernel may be able to read memory locations from another process in the same guest. This problem is limit to the host running linux kernel 4.10 with a guest running linux kernel 4.16 or later. The problem mainly affects AMD processors but Intel CPUs cannot be ruled out.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2019-3016",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 3.4,
			ImpactScore:         2.9,
			Score:               1.9,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 1.0,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               4.7,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1580501700},
		LastModified:      &types.Timestamp{Seconds: 1591820100},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2019_3819() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2019-3819",
		Cvss:         4.4,
		Summary:      "A flaw was found in the Linux kernel in the function hid_debug_events_read() in drivers/hid/hid-debug.c file which may enter an infinite loop with certain parameters passed from a userspace. A local privileged user (\"root\") can cause a system lock up and a denial of service. Versions from v4.18 and newer are vulnerable.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2019-3819",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.9,
			Score:               4.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 0.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_HIGH,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               4.4,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1548440940},
		LastModified:      &types.Timestamp{Seconds: 1603129380},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2020_16120() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-16120",
		Cvss:         4.4,
		Summary:      "Overlayfs did not properly perform permission checking when copying up files in an overlayfs and could be exploited from within a user namespace, if, for example, unprivileged user namespaces were allowed. It was possible to have a file not readable by an unprivileged user to be copied to a mountpoint controlled by the user, like a removable device. This was introduced in kernel version 4.19 by commit d1d04ef (\"ovl: stack file ops\"). This was fixed in kernel version 5.8 by commits 56230d9 (\"ovl: verify permissions in ovl_path_open()\"), 48bd024 (\"ovl: switch to mounter creds in readdir\") and 05acefb (\"ovl: check permission to open real file\"). Additionally, commits 130fdbc (\"ovl: pass correct flags for opening real directory\") and 292f902 (\"ovl: call secutiry hook in ovl_real_ioctl()\") in kernel 5.8 might also be desired or necessary. These additional commits introduced a regression in overlay mounts within user namespaces which prevented access to files with ownership outside of the user namespace. This regression was mitigated by subsequent commit b6650da (\"ovl: do not fail because of O_NOATIMEi\") in kernel 5.11.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2020-16120",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.11"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:N/A:N",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_NONE,
			ExploitabilityScore: 3.9,
			ImpactScore:         2.9,
			Score:               2.1,
			Severity:            storage.CVSSV2_LOW,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
			ExploitabilityScore: 0.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_HIGH,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_NONE,
			Score:               4.4,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1612988100},
		LastModified:      &types.Timestamp{Seconds: 1637260800},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2020_35508() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2020-35508",
		Cvss:         4.5,
		Summary:      "A flaw possibility of race condition and incorrect initialization of the process id was found in the Linux kernel child/parent process identification handling while filtering signal handlers. A local attacker is able to abuse this flaw to bypass checks to send any signal to a privileged process.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2020-35508",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.12"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:M/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_MEDIUM,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.4,
			ImpactScore:         6.4,
			Score:               4.4,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
			ExploitabilityScore: 1.0,
			ImpactScore:         3.4,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_HIGH,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_LOW,
			Integrity:           storage.CVSSV3_IMPACT_LOW,
			Availability:        storage.CVSSV3_IMPACT_LOW,
			Score:               4.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1616778900},
		LastModified:      &types.Timestamp{Seconds: 1639687320},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2021_3373() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:     "CVE-2021-3773",
		Summary: "A flaw in netfilter could allow a network-connected attacker to infer openvpn connection endpoint information for further use in traditional network attacks.",
		CvssV3: &storage.CVSSV3{
			Vector: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			Score:  9.8,
		},
	}
}

func GetEmbeddedNodeCVE_2021_20194() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-20194",
		Cvss:         7.8,
		Summary:      "There is a vulnerability in the linux kernel versions higher than 5.2 (if kernel compiled with config params CONFIG_BPF_SYSCALL=y , CONFIG_BPF=y , CONFIG_CGROUPS=y , CONFIG_CGROUP_BPF=y , CONFIG_HARDENED_USERCOPY not set, and BPF hook to getsockopt is registered). As result of BPF execution, the local user can trigger bug in __cgroup_bpf_run_filter_getsockopt() function that can lead to heap overflow (because of non-hardened usercopy). The impact of attack could be deny of service or possibly privileges escalation.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2021-20194",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.4,
			Score:               4.6,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1614122100},
		LastModified:      &types.Timestamp{Seconds: 1617193740},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2021_46283() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2021-46283",
		Cvss:         5.5,
		Summary:      "nf_tables_newset in net/netfilter/nf_tables_api.c in the Linux kernel before 5.12.13 allows local users to cause a denial of service (NULL pointer dereference and general protection fault) because of the missing initialization for nft_set_elem_expr_alloc. A local user can set a netfilter table expression in their own namespace.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2021-46283",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.12.13"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:N/I:N/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_NONE,
			Integrity:           storage.CVSSV2_IMPACT_NONE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.9,
			Score:               4.9,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         3.6,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_NONE,
			Integrity:           storage.CVSSV3_IMPACT_NONE,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               5.5,
			Severity:            storage.CVSSV3_MEDIUM,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1641939300},
		LastModified:      &types.Timestamp{Seconds: 1642685400},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2022_0185() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-0185",
		Cvss:         8.4,
		Summary:      "A heap-based buffer overflow flaw was found in the way the legacy_parse_param function in the Filesystem Context functionality of the Linux kernel verified the supplied parameters length. An unprivileged (in case of unprivileged user namespaces enabled, otherwise needs namespaced CAP_SYS_ADMIN privilege) local user able to open a filesystem that does not support the Filesystem Context API (and thus fallbacks to legacy handling) could use this flaw to escalate their privileges on the system.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2022-0185",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: ""},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:C/I:C/A:C",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_COMPLETE,
			Integrity:           storage.CVSSV2_IMPACT_COMPLETE,
			Availability:        storage.CVSSV2_IMPACT_COMPLETE,
			ExploitabilityScore: 3.9,
			ImpactScore:         10.0,
			Score:               7.2,
			Severity:            storage.CVSSV2_HIGH,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 2.5,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_NONE,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               8.4,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1644603300},
		LastModified:      &types.Timestamp{Seconds: 1648570080},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}

func GetEmbeddedNodeCVE_2022_30594() *storage.EmbeddedVulnerability {
	return &storage.EmbeddedVulnerability{
		Cve:          "CVE-2022-30594",
		Cvss:         7.8,
		Summary:      "The Linux kernel before 5.17.2 mishandles seccomp permissions. The PTRACE_SEIZE code path allows attackers to bypass intended restrictions on setting the PT_SUSPEND_SECCOMP flag.",
		Link:         "https://nvd.nist.gov/vuln/detail/CVE-2022-30594",
		SetFixedBy:   &storage.EmbeddedVulnerability_FixedBy{FixedBy: "5.10.110"},
		ScoreVersion: storage.EmbeddedVulnerability_V3,
		CvssV2: &storage.CVSSV2{
			Vector:              "AV:L/AC:L/Au:N/C:P/I:P/A:P",
			AttackVector:        storage.CVSSV2_ATTACK_LOCAL,
			AccessComplexity:    storage.CVSSV2_ACCESS_LOW,
			Authentication:      storage.CVSSV2_AUTH_NONE,
			Confidentiality:     storage.CVSSV2_IMPACT_PARTIAL,
			Integrity:           storage.CVSSV2_IMPACT_PARTIAL,
			Availability:        storage.CVSSV2_IMPACT_PARTIAL,
			ExploitabilityScore: 3.9,
			ImpactScore:         6.4,
			Score:               4.6,
			Severity:            storage.CVSSV2_MEDIUM,
		},
		CvssV3: &storage.CVSSV3{
			Vector:              "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
			ExploitabilityScore: 1.8,
			ImpactScore:         5.9,
			AttackVector:        storage.CVSSV3_ATTACK_LOCAL,
			AttackComplexity:    storage.CVSSV3_COMPLEXITY_LOW,
			PrivilegesRequired:  storage.CVSSV3_PRIVILEGE_LOW,
			UserInteraction:     storage.CVSSV3_UI_NONE,
			Scope:               storage.CVSSV3_UNCHANGED,
			Confidentiality:     storage.CVSSV3_IMPACT_HIGH,
			Integrity:           storage.CVSSV3_IMPACT_HIGH,
			Availability:        storage.CVSSV3_IMPACT_HIGH,
			Score:               7.8,
			Severity:            storage.CVSSV3_HIGH,
		},
		PublishedOn:       &types.Timestamp{Seconds: 1652332500},
		LastModified:      &types.Timestamp{Seconds: 1653067980},
		VulnerabilityType: storage.EmbeddedVulnerability_NODE_VULNERABILITY,
	}
}
